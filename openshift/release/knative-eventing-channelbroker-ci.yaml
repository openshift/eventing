---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-channel-broker-controller
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-channel-broker-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-channel-broker-controller
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - "configs.internal.knative.dev"
    resources:
      - "configmappropagations"
      - "configmappropagations/status"
    verbs:
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  - apiGroups:
      - "configs.internal.knative.dev"
    resources:
      - "configmappropagations/finalizers"
    verbs:
      - "update"
  - apiGroups:
      - ""
    resources:
      - "namespaces/finalizers"
    verbs:
      - "update"
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - "get"
    - "list"
    - "create"
    - "update"
    - "delete"
    - "patch"
    - "watch"
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configmappropagations.configs.internal.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: configs.internal.knative.dev
  versions:
    - name: v1alpha1
      served: true
      storage: true
  names:
    kind: ConfigMapPropagation
    plural: configmappropagations
    singular: configmappropagation
    categories:
      - knative-internal
    shortNames:
      - kcmp
      - cmp
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: OriginalNamespace
      type: string
      JSONPath: ".spec.originalNamespace"
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - originalNamespace
          properties:
            originalNamespace:
              type: string
              description: "The namespace where original ConfigMaps exist in."
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: broker-controller
  template:
    metadata:
      labels:
        app: broker-controller
        eventing.knative.dev/release: devel
    spec:
      serviceAccountName: eventing-controller
      containers:
      - name: broker-controller
        terminationMessagePolicy: FallbackToLogsOnError
        image: quay.io/openshift-knative/knative-eventing-channel-broker:latest
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: BROKER_INGRESS_IMAGE
            value: quay.io/openshift-knative/knative-eventing-ingress:latest
          - name: BROKER_INGRESS_SERVICE_ACCOUNT
            value: eventing-broker-ingress
          - name: BROKER_FILTER_IMAGE
            value: quay.io/openshift-knative/knative-eventing-filter:latest
          - name: BROKER_FILTER_SERVICE_ACCOUNT
            value: eventing-broker-filter
          - name: BROKER_IMAGE_PULL_SECRET_NAME
            value:
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
