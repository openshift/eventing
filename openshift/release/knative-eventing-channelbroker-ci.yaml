---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: broker-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
    knative.dev/high-availability: "true"
spec:
  replicas: 0
  selector:
    matchLabels:
      app: broker-controller
  template:
    metadata:
      labels:
        app: broker-controller
        eventing.knative.dev/release: devel
    spec:
      serviceAccountName: eventing-controller
      containers:
      - name: broker-controller
        terminationMessagePolicy: FallbackToLogsOnError
        image: registry.ci.openshift.org/openshift/knative-v0.15.2:knative-eventing-channel-broker
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: BROKER_INGRESS_IMAGE
            value: registry.ci.openshift.org/openshift/knative-v0.15.2:knative-eventing-broker-ingress
          - name: BROKER_INGRESS_SERVICE_ACCOUNT
            value: eventing-broker-ingress
          - name: BROKER_FILTER_IMAGE
            value: registry.ci.openshift.org/openshift/knative-v0.15.2:knative-eventing-broker-filter
          - name: BROKER_FILTER_SERVICE_ACCOUNT
            value: eventing-broker-filter
          - name: BROKER_IMAGE_PULL_SECRET_NAME
            value:
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
