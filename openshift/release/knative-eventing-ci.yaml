---
apiVersion: v1
kind: Namespace
metadata:
  name: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addressable-resolver
  labels:
    eventing.knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/addressable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: service-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: serving-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - serving.knative.dev
  resources:
  - routes
  - routes/status
  - services
  - services/status
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: channel-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - eventing.knative.dev
  - messaging.knative.dev
  resources:
  - channels
  - channels/status
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: broker-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - eventing.knative.dev
  resources:
  - brokers
  - brokers/status
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: messaging-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - sequences
  - sequences/status
  - choices
  - choices/status
  verbs:
  - get
  - list
  - watch---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-broker-filter
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - "eventing.knative.dev"
    resources:
      - "triggers"
      - "triggers/status"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-broker-ingress
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-config-reader
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: channelable-manipulator
  labels:
    eventing.knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/channelable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-eventing-namespaced-admin
  labels:
    eventing.knative.dev/release: devel
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["eventing.knative.dev"]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-messaging-namespaced-admin
  labels:
    eventing.knative.dev/release: devel
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["messaging.knative.dev"]
    resources: ["*"]
    verbs: ["*"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-eventing-sources-namespaced-admin
  labels:
    eventing.knative.dev/release: devel
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules:
  - apiGroups: ["sources.eventing.knative.dev"]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-controller
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "namespaces"
      - "secrets"
      - "configmaps"
      - "services"
      - "events"
      - "serviceaccounts"
    verbs: &everything
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  - apiGroups:
      - "apps"
    resources:
      - "deployments"
    verbs: *everything
  - apiGroups:
      - "rbac.authorization.k8s.io"
    resources:
      - "rolebindings"
    verbs: *everything
  - apiGroups:
      - "eventing.knative.dev"
    resources:
      - "brokers"
      - "brokers/status"
      - "triggers"
      - "triggers/status"
      - "eventtypes"
      - "eventtypes/status"
    verbs: *everything
  - apiGroups:
      - "eventing.knative.dev"
    resources:
      - "brokers/finalizers"
      - "triggers/finalizers"
    verbs:
      - "update"
  - apiGroups:
      - "messaging.knative.dev"
    resources:
      - "sequences"
      - "sequences/status"
      - "channels"
      - "channels/status"
      - "choices"
      - "choices/status"
      - "subscriptions"
      - "subscriptions/status"
    verbs: *everything
  - apiGroups:
      - "messaging.knative.dev"
    resources:
      - "sequences/finalizers"
      - "choices/finalizers"
    verbs:
      - "update"
  - apiGroups:
      - "apiextensions.k8s.io"
    resources:
      - "customresourcedefinitions"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-webhook
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-source-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-source-controller
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
      - "configmaps"
      - "services"
    verbs: &everything
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  - apiGroups:
      - "apps"
    resources:
      - "deployments"
    verbs: *everything
  - apiGroups:
      - "sources.eventing.knative.dev"
    resources:
      - "cronjobsources"
      - "cronjobsources/status"
      - "cronjobsources/finalizers"
      - "containersources"
      - "containersources/status"
      - "containersources/finalizers"
      - "apiserversources"
      - "apiserversources/status"
      - "apiserversources/finalizers"
    verbs: *everything
  - apiGroups:
      - serving.knative.dev
    resources:
      - services
    verbs: *everything
  - apiGroups:
      - eventing.knative.dev
    resources:
      - eventtypes
    verbs: *everything
  - apiGroups:
      - ""
    resources:
      - events
    verbs: *everything
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-eventing-webhook
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - ""
    resources:
      - "configmaps"
    verbs:
      - "get"
      - "list"
      - "watch"
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "get"
      - "create"
  - apiGroups:
      - "apps"
    resources:
      - "deployments"
    verbs:
      - "get"
  - apiGroups:
      - "apps"
    resources:
      - "deployments/finalizers"
    verbs:
      - update
  - apiGroups:
      - "admissionregistration.k8s.io"
    resources:
      - "mutatingwebhookconfigurations"
    verbs: 
      - "get"
      - "list"
      - "create"
      - "update"
      - "delete"
      - "patch"
      - "watch"
  - apiGroups:
      - "eventing.knative.dev"
    resources:
      - "brokers"
      - "brokers/status"
      - "channels"
      - "channels/status"
      - "subscriptions"
      - "subscriptions/status"
      - "triggers"
      - "triggers/status"
      - "eventtypes"
      - "eventtypes/status"
    verbs:
      - "get"
      - "list"
      - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller-resolver
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: addressable-resolver
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller-manipulator
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: channelable-manipulator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-webhook
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-webhook
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-webhook
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-source-controller
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-source-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: knative-eventing-source-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-source-controller-resolver
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: eventing-source-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: addressable-resolver
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: apiserversources.sources.eventing.knative.dev
spec:
  group: sources.eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    - importers
    kind: ApiServerSource
    plural: apiserversources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        registry:
          type: object
          description: "Internal information, users should not set this property"
          properties:
            eventTypes:
              type: object
              description: "Event types that ApiServerSource can produce"
              properties:
                addResource:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.resource.add"
                    schema:
                      type: string
                deleteResource:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.resource.delete"
                    schema:
                      type: string
                updateResource:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.resource.update"
                    schema:
                      type: string
                addRef:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.ref.add"
                    schema:
                      type: string
                deleteRef:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.ref.delete"
                    schema:
                      type: string
                updateRef:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.apiserver.ref.update"
                    schema:
                      type: string
        spec:
          properties:
            serviceAccountName:
              type: string
              description: "name of the ServiceAccount to use to run the receive adapter. More info: https://kubernetes.io/docs/reference/access-authn-authz/service-accounts-admin/."
            sink:
              type: object
              description: "A reference to the object that should receive events."
            mode:
              type: string
              description: "Mode controls the content of the event payload. One of: 'Ref' (only references of resources), 'Resource' (full resource)."
            resources:
              items:
                properties:
                  apiVersion:
                    type: string
                    description: "API version of the objects to watch."
                  kind:
                    type: string
                    description: "Kind of the objects to watch."
                  controller:
                    type: boolean
                    description: "If true, emits the managing controller ref. Only supported for mode=Ref. More info: https://kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/"
              type: array
          required:
          - resources
          - sink
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: brokers.eventing.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Broker
    plural: brokers
    singular: broker
    categories:
    - all
    - knative
    - eventing
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Hostname
      type: string
      JSONPath: .status.address.hostname
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplate:
              type: object
              required:
                - provisioner
              properties:
                provisioner:
                  type: object
                  required:
                    - apiVersion
                    - kind
                    - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                arguments:
                  type: object
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: channels.eventing.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Channel
    plural: channels
    singular: channel
    categories:
    - all
    - knative
    - eventing
    shortNames:
    - chan
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            provisioner:
              type: object
              required:
                - apiVersion
                - kind
                - name
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                  minLength: 1
                name:
                  type: string
                  minLength: 1
            arguments:
              type: object
            subscribable:
              type: object
              properties:
                subscribers:
                  type: array
                  items:
                    required:
                      - uid
                    properties:
                      ref:
                        type: object
                        required:
                          - namespace
                          - name
                          - uid
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            minLength: 1
                          uid:
                            type: string
                            minLength: 1
                      generation:
                        type: integer
                      uid:
                        type: string
                        minLength: 1
                      subscriberURI:
                        type: string
                        minLength: 1
                      replyURI:
                        type: string
                        minLength: 1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: channels.messaging.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
spec:
  group: messaging.knative.dev
  versions:
    - name: v1alpha1
      served: true
      storage: true
  names:
    kind: Channel
    plural: channels
    singular: channel
    categories:
      - all
      - knative
      - messaging
      - channel
    shortNames:
      - ch
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: URL
      type: string
      JSONPath: .status.address.url
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            channelTemplate:
              type: object
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                  minLength: 1
                spec:
                  type: object
              required:
                - apiVersion
                - kind
            subscribable:
              type: object
              properties:
                subscribers:
                  type: array
                  items:
                    required:
                      - uid
                    properties:
                      ref:
                        type: object
                        required:
                          - namespace
                          - name
                          - uid
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            minLength: 1
                          uid:
                            type: string
                            minLength: 1
                      uid:
                        type: string
                        minLength: 1
                      subscriberURI:
                        type: string
                        minLength: 1
                      replyURI:
                        type: string
                        minLength: 1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: choices.messaging.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: messaging.knative.dev
  version: v1alpha1
  names:
    kind: Choice
    plural: choices
    singular: choice
    categories:
    - all
    - knative
    - eventing
    - messaging
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: URL
      type: string
      JSONPath: .status.address.url
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - cases
            - channelTemplate
          properties:
            cases:
              type: array
              items:
                type: object
                required:
                - subscriber
                properties:
                  filter:
                    type: object
                    properties:
                      dnsName:
                        type: string
                        minLength: 1
                      uri:
                        type: string
                        minLength: 1
                      ref:
                        type: object
                        required:
                          - apiVersion
                          - kind
                          - name
                        properties:
                          apiVersion:
                            type: string
                            minLength: 1
                          kind:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            maxLength: 0
                  subscriber:
                    type: object
                    properties:
                      dnsName:
                        type: string
                        minLength: 1
                      uri:
                        type: string
                        minLength: 1
                      ref:
                        type: object
                        required:
                          - apiVersion
                          - kind
                          - name
                        properties:
                          apiVersion:
                            type: string
                            minLength: 1
                          kind:
                            type: string
                            minLength: 1
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            maxLength: 0
            channelTemplate:
              type: object
              required:
                - apiVersion
                - kind
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                  minLength: 1
                spec:
                  type: object
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: containersources.sources.eventing.knative.dev
spec:
  group: sources.eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    - importers
    kind: ContainerSource
    plural: containersources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            args:
              items:
                type: string
              type: array
            env:
              items:
                type: object
              type: array
            image:
              minLength: 1
              type: string
            serviceAccountName:
              type: string
            template:
              type: object
            sink:
              type: object
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    eventing.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: cronjobsources.sources.eventing.knative.dev
spec:
  group: sources.eventing.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    - importers
    kind: CronJobSource
    plural: cronjobsources
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        registry:
          type: object
          description: "Internal information, users should not set this property"
          properties:
            eventTypes:
              type: object
              description: "Event types that CronJobSource can produce"
              properties:
                cron:
                  type: object
                  properties:
                    type:
                      type: string
                      pattern: "dev.knative.cronjob.event"
                    schema:
                      type: string
        spec:
          properties:
            data:
              type: string
            schedule:
              type: string
            serviceAccountName:
              type: string
            sink:
              type: object
            resources:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
                requests:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
              type: object
          required:
          - schedule
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
          type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: eventtypes.eventing.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: EventType
    plural: eventtypes
    singular: eventtype
    categories:
      - all
      - knative
      - eventing
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Type
      type: string
      JSONPath: ".spec.type"
    - name: Source
      type: string
      JSONPath: ".spec.source"
    - name: Schema
      type: string
      JSONPath: ".spec.schema"
    - name: Broker
      type: string
      JSONPath: ".spec.broker"
    - name: Description
      type: string
      JSONPath: ".spec.description"
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - type
            - source
            - broker
          properties:
            type:
              type: string
              minLength: 1
            source:
              type: string
              minLength: 1
            schema:
              type: string
            broker:
              type: string
              minLength: 1
            description:
              type: string
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sequences.messaging.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: messaging.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Sequence
    plural: sequences
    singular: sequence
    categories:
    - all
    - knative
    - eventing
    - messaging
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Hostname
      type: string
      JSONPath: .status.address.hostname
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - steps
            - channelTemplate
          properties:
            steps:
              type: array
              items:
                type: object
                properties:
                  dnsName:
                    type: string
                    minLength: 1
                  uri:
                    type: string
                    minLength: 1
                  ref:
                    type: object
                    required:
                      - apiVersion
                      - kind
                      - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                      namespace:
                        type: string
                        maxLength: 0
            channelTemplate:
              type: object
              required:
                - apiVersion
                - kind
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                  minLength: 1
                spec:
                  type: object
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: subscriptions.messaging.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: messaging.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Subscription
    plural: subscriptions
    singular: subscription
    categories:
    - all
    - knative
    - eventing
    shortNames:
    - sub
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - channel
          properties:
            channel:
              type: object
              required:
                - apiVersion
                - kind
                - name
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                name:
                  type: string
                  minLength: 1
            subscriber:
              type: object
              properties:
                dnsName:
                  type: string
                  minLength: 1
                uri:
                  type: string
                  minLength: 1
                ref:
                  type: object
                  required:
                    - apiVersion
                    - kind
                    - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
            reply:
              type: object
              properties:
                channel:
                  type: object
                  required:
                    - apiVersion
                    - kind
                    - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                    name:
                      type: string
                      minLength: 1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: triggers.eventing.knative.dev
  labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Trigger
    plural: triggers
    singular: trigger
    categories:
    - all
    - knative
    - eventing
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Broker
      type: string
      JSONPath: .spec.broker
    - name: Subscriber_URI
      type: string
      JSONPath: .status.subscriberURI
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          required:
            - subscriber
          properties:
            broker:
              type: string
            filter:
              type: object
              properties:
                sourceAndType:
                  type: object
                  properties:
                    type:
                      type: string
                    source:
                      type: string
                attributes:
                  type: object
                  description: "Map of CloudEvents attributes used for filtering events."
                  additionalProperties:
                    type: string
            subscriber:
              type: object
              properties:
                dnsName:
                  type: string
                  minLength: 1
                uri:
                  type: string
                  minLength: 1
                ref:
                  type: object
                  required:
                    - apiVersion
                    - kind
                    - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: default-ch-webhook
  namespace: knative-eventing
data:
  default-ch-config: |
    clusterDefault:
      apiVersion: messaging.knative.dev/v1alpha1
      kind: InMemoryChannel
    namespaceDefaults:
      some-namespace:
        apiVersion: messaging.knative.dev/v1alpha1
        kind: InMemoryChannel
---
apiVersion: v1
kind: Service
metadata:
  labels:
    eventing.knative.dev/release: devel
    role: eventing-webhook
  name: eventing-webhook
  namespace: knative-eventing
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    role: eventing-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: eventing-controller
        eventing.knative.dev/release: devel
    spec:
      serviceAccountName: eventing-controller
      containers:
      - name: eventing-controller
        terminationMessagePolicy: FallbackToLogsOnError
        image: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-controller:ci
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/eventing
          - name: BROKER_INGRESS_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-ingress:ci
          - name: BROKER_INGRESS_SERVICE_ACCOUNT
            value: eventing-broker-ingress
          - name: BROKER_FILTER_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-filter:ci
          - name: BROKER_FILTER_SERVICE_ACCOUNT
            value: eventing-broker-filter
        ports:
          - containerPort: 9090
            name: metrics
        volumeMounts:
          - name: config-logging
            mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sources-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sources-controller
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: sources-controller
        eventing.knative.dev/release: devel
    spec:
      serviceAccountName: eventing-source-controller
      containers:
      - name: controller
        image: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-sources-controller:ci
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - name: metrics
            containerPort: 9090
        volumeMounts:
          - name: config-logging
            mountPath: /etc/config-logging
        env:
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/sources
          - name: CRONJOB_RA_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-cronjob-receive-adapter:ci
          - name: APISERVER_RA_IMAGE
            value: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-apiserver-receive-adapter:ci
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-webhook
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      app: eventing-webhook
      role: eventing-webhook
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels: *labels
    spec:
      serviceAccountName: eventing-webhook
      containers:
      - name: eventing-webhook
        terminationMessagePolicy: FallbackToLogsOnError
        image: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-webhook:ci
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: METRICS_DOMAIN
          value: knative.dev/eventing
        - name: WEBHOOK_NAME
          value: eventing-webhook
        - name: REG_DELAY_TIME
          value: "10"
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-eventing
data:
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
  loglevel.controller: "info"
  loglevel.webhook: "info"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-observability
  namespace: knative-eventing
data:
  _example: |
    logging.enable-var-log-collection: false
    logging.fluentd-sidecar-image: k8s.gcr.io/fluentd-elasticsearch:v2.0.4
    logging.fluentd-sidecar-output-config: |
      <filter **>
        @type parser
        key_name log
        <parse>
          @type multi_format
          <pattern>
            format json
            time_key fluentd-time # fluentd-time is reserved for structured logs
            time_format %Y-%m-%dT%H:%M:%S.%NZ
          </pattern>
          <pattern>
            format none
            message_key log
          </pattern>
        </parse>
      </filter>
      <match **>
        @id elasticsearch
        @type elasticsearch
        @log_level info
        include_tag_key true
        host elasticsearch-logging.knative-monitoring
        port 9200
        logstash_format true
        <buffer>
          @type file
          path /var/log/fluentd-buffers/kubernetes.system.buffer
          flush_mode interval
          retry_type exponential_backoff
          flush_thread_count 2
          flush_interval 5s
          retry_forever
          retry_max_interval 30
          chunk_limit_size 2M
          queue_limit_length 8
          overflow_action block
        </buffer>
      </match>
    logging.revision-url-template: |
      http://localhost:8001/api/v1/namespaces/knative-monitoring/services/kibana-logging/proxy/app/kibana#/discover?_a=(query:(match:(kubernetes.labels.knative-dev%2FrevisionUID:(query:'${REVISION_UID}',type:phrase))))
    logging.request-log-template: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl": "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}", "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent": "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp": "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s", "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
    metrics.backend-destination: prometheus
    metrics.request-metrics-backend-destination: prometheus
    metrics.stackdriver-project-id: "<your stackdriver project id>"
    metrics.allow-stackdriver-custom-metrics: "false"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tracing
  namespace: knative-eventing
data:
  _example: |
    backend: "none"
    zipkin-endpoint: "http://zipkin.istio-system.svc.cluster.local:9411/api/v2/spans"
    stackdriver-project-id: "my-project"
    debug: "false"
    sample-rate: "0.1"
---
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels
      - inmemorychannels/status
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-channelable-manipulator
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/channelable: "true"
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels
      - inmemorychannels/status
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-controller
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels
      - inmemorychannels/status
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels/finalizers
    verbs:
      - update
  - apiGroups:
      - "" # Core API group.
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - "" # Core API group.
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - deployments/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs: 
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-dispatcher
  labels:
    eventing.knative.dev/release: devel
rules:
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels
      - inmemorychannels/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "" # Core API group.
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - messaging.knative.dev
    resources:
      - inmemorychannels/status
    verbs:
      - update
---
apiVersion: v1
kind: Service
metadata:
  name: imc-dispatcher
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
    messaging.knative.dev/channel: in-memory-channel
    messaging.knative.dev/role: dispatcher
spec:
  selector:
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: dispatcher
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: imc-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: imc-dispatcher
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imc-controller
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: imc-controller
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: imc-controller
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imc-dispatcher
  labels:
    eventing.knative.dev/release: devel
subjects:
  - kind: ServiceAccount
    name: imc-dispatcher
    namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: imc-dispatcher
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
 name: inmemorychannels.messaging.knative.dev
 labels:
    eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
spec:
  group: messaging.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: InMemoryChannel
    plural: inmemorychannels
    singular: inmemorychannel
    categories:
    - all
    - knative
    - messaging
    - channel
    shortNames:
    - imc
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
    - name: Ready
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
    - name: Reason
      type: string
      JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
    - name: Hostname
      type: string
      JSONPath: .status.address.hostname
    - name: Age
      type: date
      JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            subscribable:
              type: object
              properties:
                subscribers:
                  type: array
                  items:
                    required:
                      - uid
                    properties:
                      ref:
                        type: object
                        required:
                          - namespace
                          - name
                          - uid
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            minLength: 1
                          uid:
                            type: string
                            minLength: 1
                      uid:
                        type: string
                        minLength: 1
                      subscriberURI:
                        type: string
                        minLength: 1
                      replyURI:
                        type: string
                        minLength: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imc-controller
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: imc-controller
      containers:
      - name: controller
        image: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-imc-controller:ci
        env:
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/inmemorychannel-controller
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - containerPort: 9090
            name: metrics
        volumeMounts:
          - name: config-logging
            mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imc-dispatcher
  namespace: knative-eventing
  labels:
    eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: dispatcher
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: imc-dispatcher
      containers:
      - name: dispatcher
        image: image-registry.openshift-image-registry.svc:5000/knative-eventing/knative-eventing-imc-dispatcher:ci
        env:
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/inmemorychannel-dispatcher
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
          - containerPort: 9090
            name: metrics
        volumeMounts:
          - name: config-logging
            mountPath: /etc/config-logging
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
